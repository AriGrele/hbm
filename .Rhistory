n=floor(sqrt(length(out)))
if(mean(regexpr('traces',list.dirs(hbm@dir))<0)==1){
suppressMessages(dir.create(paste0(hbm@dir,'/traces/')))}
png(paste0(hbm@dir,'/traces/',hbm@name,u,'.png'),1000*n,1000*length(out)/n)
do.call(gridExtra::grid.arrange,c(out,ncol=n))
dev.off()}})
for(u in ucols){                                                              #for each column:
out=list()
for(i in cols[regexpr(u,cols)>0]){
k=k+1
e=stringr::str_extract_all(i,'(\\[\\d+,\\d+\\])|(\\[\\d+\\])')
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
rhat=ifelse(length(pos)==1,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1]],
ifelse(length(pos)==0,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]],
hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1],pos[2]]))
m=suppressMessages(reshape2::melt(as.data.frame(
coda::as.array.mcmc.list(samples[,i])))[c(T,rep(F,cull)),])
out[[i]]=ggplot(m)+
geom_line(aes(x=rep(1:xmax,nchains)[c(T,rep(F,cull))],
y=value,color=variable),alpha=1/nchains*2,size=1)+
theme_classic()+
theme(text=element_text(size=65),
panel.border=element_rect(fill=F,size=5),
axis.text = element_blank())+
ggtitle(i,subtitle =paste('Rhat =',round(rhat,4)))+
guides(color='none')+
xlab('')+ylab('')+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand=c(0,0))
if(rhat<1.1){out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.ice(nchains))}
else{out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.matter(nchains))}
progress(k/length(cols),50)}
n=floor(sqrt(length(out)))
if(mean(regexpr('traces',list.dirs(hbm@dir))<0)==1){
suppressMessages(dir.create(paste0(hbm@dir,'/traces/')))}
png(paste0(hbm@dir,'/traces/',hbm@name,u,'.png'),1000*n,1000*length(out)/n)
do.call(gridExtra::grid.arrange,c(out,ncol=n))
dev.off()}
cull=0
for(u in ucols){                                                              #for each column:
out=list()
for(i in cols[regexpr(u,cols)>0]){
k=k+1
e=stringr::str_extract_all(i,'(\\[\\d+,\\d+\\])|(\\[\\d+\\])')
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
rhat=ifelse(length(pos)==1,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1]],
ifelse(length(pos)==0,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]],
hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1],pos[2]]))
m=suppressMessages(reshape2::melt(as.data.frame(
coda::as.array.mcmc.list(samples[,i])))[c(T,rep(F,cull)),])
out[[i]]=ggplot(m)+
geom_line(aes(x=rep(1:xmax,nchains)[c(T,rep(F,cull))],
y=value,color=variable),alpha=1/nchains*2,size=1)+
theme_classic()+
theme(text=element_text(size=65),
panel.border=element_rect(fill=F,size=5),
axis.text = element_blank())+
ggtitle(i,subtitle =paste('Rhat =',round(rhat,4)))+
guides(color='none')+
xlab('')+ylab('')+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand=c(0,0))
if(rhat<1.1){out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.ice(nchains))}
else{out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.matter(nchains))}
progress(k/length(cols),50)}
n=floor(sqrt(length(out)))
if(mean(regexpr('traces',list.dirs(hbm@dir))<0)==1){
suppressMessages(dir.create(paste0(hbm@dir,'/traces/')))}
png(paste0(hbm@dir,'/traces/',hbm@name,u,'.png'),1000*n,1000*length(out)/n)
do.call(gridExtra::grid.arrange,c(out,ncol=n))
dev.off()}
if(mean(regexpr('traces',list.dirs(hbm@dir))<0)==1){
suppressMessages(dir.create(paste0(hbm@dir,'/traces/')))}
png(paste0(hbm@dir,'/traces/',hbm@name,u,'.png'),1000*n,1000*length(out)/n)
do.call(gridExtra::grid.arrange,c(out,ncol=n))
out=list()
for(i in cols[regexpr(u,cols)>0]){
k=k+1
e=stringr::str_extract_all(i,'(\\[\\d+,\\d+\\])|(\\[\\d+\\])')
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
rhat=ifelse(length(pos)==1,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1]],
ifelse(length(pos)==0,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]],
hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1],pos[2]]))
m=suppressMessages(reshape2::melt(as.data.frame(
coda::as.array.mcmc.list(samples[,i])))[c(T,rep(F,cull)),])
out[[i]]=ggplot(m)+
geom_line(aes(x=rep(1:xmax,nchains)[c(T,rep(F,cull))],
y=value,color=variable),alpha=1/nchains*2,size=1)+
theme_classic()+
theme(text=element_text(size=65),
panel.border=element_rect(fill=F,size=5),
axis.text = element_blank())+
ggtitle(i,subtitle =paste('Rhat =',round(rhat,4)))+
guides(color='none')+
xlab('')+ylab('')+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand=c(0,0))
if(rhat<1.1){out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.ice(nchains))}
else{out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.matter(nchains))}
progress(k/length(cols),50)}
plots=list();k=0                                                              #empty vars for output
for(u in ucols){                                                              #for each column:
out=list()
for(i in cols[regexpr(u,cols)>0]){
k=k+1
e=stringr::str_extract_all(i,'(\\[\\d+,\\d+\\])|(\\[\\d+\\])')
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
rhat=ifelse(length(pos)==1,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1]],
ifelse(length(pos)==0,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]],
hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1],pos[2]]))
m=suppressMessages(reshape2::melt(as.data.frame(
coda::as.array.mcmc.list(samples[,i])))[c(T,rep(F,cull)),])
out[[i]]=ggplot(m)+
geom_line(aes(x=rep(1:xmax,nchains)[c(T,rep(F,cull))],
y=value,color=variable),alpha=1/nchains*2,size=1)+
theme_classic()+
theme(text=element_text(size=65),
panel.border=element_rect(fill=F,size=5),
axis.text = element_blank())+
ggtitle(i,subtitle =paste('Rhat =',round(rhat,4)))+
guides(color='none')+
xlab('')+ylab('')+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand=c(0,0))
if(rhat<1.1){out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.ice(nchains))}
else{out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.matter(nchains))}
progress(k/length(cols),50)}
n=floor(sqrt(length(out)))
if(mean(regexpr('traces',list.dirs(hbm@dir))<0)==1){
suppressMessages(dir.create(paste0(hbm@dir,'/traces/')))}
png(paste0(hbm@dir,'/traces/',hbm@name,u,'.png'),1000*n,1000*length(out)/n)
do.call(gridExtra::grid.arrange,c(out,ncol=n))
dev.off()}
traces(b)
source('hbm.R')
b=bsem(mix,model)
source('hbm.R')
b=bsem(mix,model)
b
o1=hbm(mix,length~mass)
source('hbm.R')
#################################################################################
clamp=function(x,minimum,maximum){return(ifelse(x<minimum,minimum,ifelse(x>maximum,maximum,x)))}
randseq=function(x,size){out=c();for(i in 1:size){out=c(out,sample(x,1))};return(out)}
fixedmean=function(n,m,d){
out=c(rnorm(n-1,m,d))
return(c(out,(m-sum(out)/n)*n))}
# x => list(distrubition, mean, sd or other parameter)
# y => list(x,alpha,slope)
# g => list(groups,sd)
mixed=function(n,params){
data=setNames(as.data.frame(matrix(ncol=length(names(params)),nrow=n)),names(params))
rslope=list();ralpha=list()
resp=names(params)[sapply(names(params),\(x)length(params[[x]])>=3&is.character(params[[x]][[1]]))]
for(p in setdiff(names(params),resp)){
if(length(params[[p]])==2){
data[p]=randseq(params[[p]][[1]],n)
rslope[[p]]=setNames(fixedmean(length(params[[p]][[1]]),params[[resp[1]]][[3]],params[[p]][[2]]),params[[p]][[1]])
ralpha[[p]]=setNames(fixedmean(length(params[[p]][[1]]),params[[resp[1]]][[2]],params[[p]][[2]]),params[[p]][[1]])}}
for(p in setdiff(names(params),names(rslope))){
if(length(params[[p]])>=3){
if(is.function(params[[p]][[1]])){data[p]=params[[p]][[1]](n,params[[p]][[2]],params[[p]][[3]])}
else{
slope=rep(1/(mean(rslope[[1]])^(length(rslope)-1)),n)
alpha=rep(0,n)
for(i in names(rslope)){
slope=slope*rslope[[i]][data[,i]]
alpha=alpha+ralpha[[i]][data[,i]]/length(names(ralpha))}
data[p]=data[params[[p]][[1]]]*slope+alpha+rnorm(n,0,params[[p]][[2]])}}}
return(list(data,ralpha,rslope))}
####examples#####################################################################
#generate data
mix=mixed(200,list('mass'=list(runif,10,20),
'length'=list('mass',1,2),
'site'=list(LETTERS[1:5],1),
'species'=list(c('s1','s2','s3'),1),
'sex'=list(c('M','F'),1),
'color'=list(c('red','blue','yellow'),1)))[[1]]
data=data.frame(mass=mix$mass)
data$slope=1:4
data$site=letters[1:4]
data$length=rnorm(200,data$mass*data$slope,1)
data$offspring=rgamma(200,shape=1,rate=1/data$mass*data$slope)
data$survival=(data$mass>15)+0
cowplot::plot_grid(
ggplot(data,aes(x=mass,y=length,color=site))+
geom_point()+
geom_smooth(method=lm),
ggplot(data,aes(x=mass,y=offspring,color=site))+
geom_point()+
geom_smooth(method=lm),
ggplot(data,aes(x=mass,y=survival,color=site))+
geom_point()+
geom_smooth(method=lm),
ggplot(data,aes(x=length,color=site))+geom_density(),
ggplot(data,aes(x=offspring,color=site))+geom_density(),
ggplot(data,aes(x=survival,color=site))+geom_density(bw=.01),ncol=3)
mix$species[mix$site=='A']=c('fish','moose')
mix$species[mix$site=='B']=c('s1','s4')
ggplot(mix,aes(x=mass,y=length,color=paste(species,color)))+
geom_point()+
geom_smooth(method=lm)+
facet_grid(cols=vars(site))
set.seed(1)
o1=hbm(mix,length~mass)
bass(o1,'mass','site')
resid(o1)
summary(o1)
fits(o1)
set.seed(1)
o2=hbm(data,offspring~mass+(site),dist='dgamma')
resid(o2)
fits(o2)
set.seed(1)
o3=hbm(data,survival~mass+(site),dist='dbern')
resid(o3)
o3fits(o3)
summary(o3)
mix$sex=as.numeric(as.factor(mix$sex))
model='mass~length+sex
length~sex'
source('hbm.R')
b=bsem(mix,model)
b
####examples#####################################################################
#generate data
mix=mixed(200,list('mass'=list(runif,10,20),
'length'=list('mass',1,2),
'site'=list(LETTERS[1:5],1),
'species'=list(c('s1','s2','s3'),1),
'sex'=list(c('M','F'),1),
'color'=list(c('red','blue','yellow'),1)))[[1]]
data=data.frame(mass=mix$mass)
data$slope=1:4
data$site=letters[1:4]
data$length=rnorm(200,data$mass*data$slope,1)
data$offspring=rgamma(200,shape=1,rate=1/data$mass*data$slope)
data$survival=(data$mass>15)+0
cowplot::plot_grid(
ggplot(data,aes(x=mass,y=length,color=site))+
geom_point()+
geom_smooth(method=lm),
ggplot(data,aes(x=mass,y=offspring,color=site))+
geom_point()+
geom_smooth(method=lm),
ggplot(data,aes(x=mass,y=survival,color=site))+
geom_point()+
geom_smooth(method=lm),
ggplot(data,aes(x=length,color=site))+geom_density(),
ggplot(data,aes(x=offspring,color=site))+geom_density(),
ggplot(data,aes(x=survival,color=site))+geom_density(bw=.01),ncol=3)
mix$species[mix$site=='A']=c('fish','moose')
mix$species[mix$site=='B']=c('s1','s4')
ggplot(mix,aes(x=mass,y=length,color=paste(species,color)))+
geom_point()+
geom_smooth(method=lm)+
facet_grid(cols=vars(site))
set.seed(1)
mix$sex=as.numeric(as.factor(mix$sex))
model='mass~length+sex
length~sex'
source('hbm.R')
b=bsem(mix,model)
source('hbm.R')
b=bsem(mix,model)
source('hbm.R')
b=bsem(mix,model)
source('hbm.R')
b=bsem(mix,model)
data.frame('x'=1,'y'=2)\>as.list()
data.frame('x'=1,'y'=2).>as.list()
data.frame('x'=1,'y'=2)|>as.list()
source('hbm.R')
#################################################################################
clamp=function(x,minimum,maximum){return(ifelse(x<minimum,minimum,ifelse(x>maximum,maximum,x)))}
randseq=function(x,size){out=c();for(i in 1:size){out=c(out,sample(x,1))};return(out)}
fixedmean=function(n,m,d){
out=c(rnorm(n-1,m,d))
return(c(out,(m-sum(out)/n)*n))}
# x => list(distrubition, mean, sd or other parameter)
# y => list(x,alpha,slope)
# g => list(groups,sd)
mixed=function(n,params){
data=setNames(as.data.frame(matrix(ncol=length(names(params)),nrow=n)),names(params))
rslope=list();ralpha=list()
resp=names(params)[sapply(names(params),\(x)length(params[[x]])>=3&is.character(params[[x]][[1]]))]
for(p in setdiff(names(params),resp)){
if(length(params[[p]])==2){
data[p]=randseq(params[[p]][[1]],n)
rslope[[p]]=setNames(fixedmean(length(params[[p]][[1]]),params[[resp[1]]][[3]],params[[p]][[2]]),params[[p]][[1]])
ralpha[[p]]=setNames(fixedmean(length(params[[p]][[1]]),params[[resp[1]]][[2]],params[[p]][[2]]),params[[p]][[1]])}}
for(p in setdiff(names(params),names(rslope))){
if(length(params[[p]])>=3){
if(is.function(params[[p]][[1]])){data[p]=params[[p]][[1]](n,params[[p]][[2]],params[[p]][[3]])}
else{
slope=rep(1/(mean(rslope[[1]])^(length(rslope)-1)),n)
alpha=rep(0,n)
for(i in names(rslope)){
slope=slope*rslope[[i]][data[,i]]
alpha=alpha+ralpha[[i]][data[,i]]/length(names(ralpha))}
data[p]=data[params[[p]][[1]]]*slope+alpha+rnorm(n,0,params[[p]][[2]])}}}
return(list(data,ralpha,rslope))}
####examples#####################################################################
#generate data
mix=mixed(200,list('mass'=list(runif,10,20),
'length'=list('mass',1,2),
'site'=list(LETTERS[1:5],1),
'species'=list(c('s1','s2','s3'),1),
'sex'=list(c('M','F'),1),
'color'=list(c('red','blue','yellow'),1)))[[1]]
data=data.frame(mass=mix$mass)
data$slope=1:4
data$site=letters[1:4]
data$length=rnorm(200,data$mass*data$slope,1)
data$offspring=rgamma(200,shape=1,rate=1/data$mass*data$slope)
data$survival=(data$mass>15)+0
cowplot::plot_grid(
ggplot(data,aes(x=mass,y=length,color=site))+
geom_point()+
geom_smooth(method=lm),
ggplot(data,aes(x=mass,y=offspring,color=site))+
geom_point()+
geom_smooth(method=lm),
ggplot(data,aes(x=mass,y=survival,color=site))+
geom_point()+
geom_smooth(method=lm),
ggplot(data,aes(x=length,color=site))+geom_density(),
ggplot(data,aes(x=offspring,color=site))+geom_density(),
ggplot(data,aes(x=survival,color=site))+geom_density(bw=.01),ncol=3)
mix$species[mix$site=='A']=c('fish','moose')
mix$species[mix$site=='B']=c('s1','s4')
ggplot(mix,aes(x=mass,y=length,color=paste(species,color)))+
geom_point()+
geom_smooth(method=lm)+
facet_grid(cols=vars(site))
set.seed(1)
o1=hbm(mix,length~mass)
bass(o1,'mass','site')
resid(o1)
summary(o1)
fits(o1)
set.seed(1)
o2=hbm(data,offspring~mass+(site),dist='dgamma')
resid(o2)
fits(o2)
set.seed(1)
o3=hbm(data,survival~mass+(site),dist='dbern')
resid(o3)
o3fits(o3)
summary(o3)
mix$sex=as.numeric(as.factor(mix$sex))
model='mass~length+sex
length~sex'
source('hbm.R')
b=bsem(mix,model)
b
summary(o1)
o1@output
o1@vars[[2]]
as.list(o1@output[-length(o1@output)])
#################################################################################
setMethod("summary","hbm_object",function(object){                              #creates summary aggregation of HBM output
p=as.list(object@output[-ncol(object@output)])
a=with(object@output,aggregate(response,p,pd))
a$mean=with(object@output,aggregate(response,p,mean))$x
a$CIl=with(object@output,aggregate(response,p,function(x) quantile(x,0.025)))$x
a$CIu=with(object@output,aggregate(response,p,function(x) quantile(x,0.975)))$x
a=setNames(a,c(names(object@output)[-c(length(object@output))],
'PD','mean','CI_lower','CI_upper'))
return(a)})
summary(o1)
o1@jags_model$samples[[1]]
hbm=o1
samples=hbm@jags_model$samples                                                #select samples and columns for each plot
cols=colnames(hbm@jags_model$samples[[1]])
samples
cols
allucols=unique(gsub('\\[.+]$','',cols));ucols=allucols[1]                    #correct colnames
allucols
ucols
for(u in allucols){                                                           #for each col:
stop=0
for(q in ucols){if(regexpr(u,q)>0|regexpr(q,u)>0){stop=1}}                  #   stop when non-unique column reached
if(stop==0){ucols=c(ucols,u)}}                                              #   append col after stop
ucols
allucols=c(allucols,'alpha_site')
ucols=allucols[1]
for(u in allucols){                                                           #To find unique terms within columns, for each col:
stop=0
for(q in ucols){if(regexpr(u,q)>0|regexpr(q,u)>0){stop=1}}                  #   stop when non-unique column reached
if(stop==0){ucols=c(ucols,u)}}                                              #   append col otherwise
ucols
source("~/scripts/hbm/hbm.R")
for(u in ucols){                                                              #for each column:
out=list()
for(i in cols[regexpr(u,cols)>0]){
k=k+1
e=stringr::str_extract_all(i,'(\\[\\d+,\\d+\\])|(\\[\\d+\\])')
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
rhat=ifelse(length(pos)==1,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1]],
ifelse(length(pos)==0,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]],
hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1],pos[2]]))
m=suppressMessages(reshape2::melt(as.data.frame(
coda::as.array.mcmc.list(samples[,i])))[c(T,rep(F,cull)),])
out[[i]]=ggplot(m)+
geom_line(aes(x=rep(1:xmax,nchains)[c(T,rep(F,cull))],
y=value,color=variable),alpha=1/nchains*2,size=1)+
theme_classic()+
theme(text=element_text(size=65),
panel.border=element_rect(fill=F,size=5),
axis.text = element_blank())+
ggtitle(i,subtitle =paste('Rhat =',round(rhat,4)))+
guides(color='none')+
xlab('')+ylab('')+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand=c(0,0))
if(rhat<1.1){out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.ice(nchains))}
else{out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.matter(nchains))}
progress(k/length(cols),50)}
n=floor(sqrt(length(out)))
if(mean(regexpr('traces',list.dirs(hbm@dir))<0)==1){
suppressMessages(dir.create(paste0(hbm@dir,'/traces/')))}
png(paste0(hbm@dir,'/traces/',hbm@name,u,'.png'),1000*n,1000*length(out)/n)
do.call(gridExtra::grid.arrange,c(out,ncol=n))
dev.off()}})
u
i
out=list()
for(i in cols[regexpr(u,cols)>0]){
k=k+1
e=stringr::str_extract_all(i,'(\\[\\d+,\\d+\\])|(\\[\\d+\\])')
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
rhat=ifelse(length(pos)==1,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1]],
ifelse(length(pos)==0,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]],
hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1],pos[2]]))
m=suppressMessages(reshape2::melt(as.data.frame(
coda::as.array.mcmc.list(samples[,i])))[c(T,rep(F,cull)),])
out[[i]]=ggplot(m)+
geom_line(aes(x=rep(1:xmax,nchains)[c(T,rep(F,cull))],
y=value,color=variable),alpha=1/nchains*2,size=1)+
theme_classic()+
theme(text=element_text(size=65),
panel.border=element_rect(fill=F,size=5),
axis.text = element_blank())+
ggtitle(i,subtitle =paste('Rhat =',round(rhat,4)))+
guides(color='none')+
xlab('')+ylab('')+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand=c(0,0))
if(rhat<1.1){out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.ice(nchains))}
else{out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.matter(nchains))}
progress(k/length(cols),50)}
i
cols
cols[regexpr(u,cols)>0]
cols
u
ucols
u='length.sfit'
cols[regexpr(u,cols)>0]
for(i in cols[regexpr(u,cols)>0]){
k=k+1
e=stringr::str_extract_all(i,'(\\[\\d+,\\d+\\])|(\\[\\d+\\])')
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
rhat=ifelse(length(pos)==1,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1]],
ifelse(length(pos)==0,hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]],
hbm@jags_model$Rhat[[gsub('\\[.+]$','',i)]][pos[1],pos[2]]))
m=suppressMessages(reshape2::melt(as.data.frame(
coda::as.array.mcmc.list(samples[,i])))[c(T,rep(F,cull)),])
out[[i]]=ggplot(m)+
geom_line(aes(x=rep(1:xmax,nchains)[c(T,rep(F,cull))],
y=value,color=variable),alpha=1/nchains*2,size=1)+
theme_classic()+
theme(text=element_text(size=65),
panel.border=element_rect(fill=F,size=5),
axis.text = element_blank())+
ggtitle(i,subtitle =paste('Rhat =',round(rhat,4)))+
guides(color='none')+
xlab('')+ylab('')+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand=c(0,0))
if(rhat<1.1){out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.ice(nchains))}
else{out[[i]]=out[[i]]+
scale_color_manual(values=pals::ocean.matter(nchains))}
progress(k/length(cols),50)}
stringr::str_extract_all(i,'(\\[\\d+,\\d+\\])|(\\[\\d+\\])')
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
e=stringr::str_extract_all(i,'(\\[\\d+,\\d+\\])|(\\[\\d+\\])')
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
pos
i='A[1]'
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
pos
e=stringr::str_extract_all(i,'(\\[\\d+,\\d+\\])|(\\[\\d+\\])')            #select names with [numeral] to identify output from BSEM
e
pos=eval(parse(text=gsub('\\]','\\)',gsub('\\[','c\\(',e))))
pos
gsub('\\[.+]$','',i)]
gsub('\\[.+]$','',i)
