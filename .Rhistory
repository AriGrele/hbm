cat('\nFormatting data\n')
output=tryCatch(format_model(output),error=\(x){print(x);return(output)})
cat('\nmaking trace plots\n')
traces(output,cull=9)
write.csv(summary(output),
paste0(output@dir,'/',output@name,'.csv'),row.names=F)
for(n in names(output@jags_model$Rhat)){
if(max(output@jags_model$Rhat[[n]],na.rm=T)>1.1){
cat(rep('#',50),'\nRhat Greater than 1.1 in\n',
paste(output@input,collapse = ' '),'\n',rep('#',50),'\n',sep='')
break}}
return(output)}
#################################################################################
wave=function(data,var,s){                                                      #create single distribution plots, takes argument of model output, focal variables, scale
g=ggplot(data)+
geom_vline(xintercept=0,size=2*s)+
geom_hline(yintercept=0,size=2*s)+
#facet_grid(reformulate(var$var[1]))+
geom_density(aes_string(x='response',color=var$var[1]),size=s)
return(list(g))}
wave2=function(data,var,s){                                                     #create multi-distribution plots, takes argument of model output, focal variables, scale
data=subset(data,!(data[,var$var[1]]=='all'&data[,var$var[2]]=='all'))
out=list()
for(g in unique(data[,var$var[2]])){
out[[g]]=ggplot()+
geom_vline(xintercept = 0,size=2*s,linetype='dashed')+
geom_density(data=data[data[,var$var[1]]=='all'&data[,var$var[2]]==g,],
aes_string(x='response',group=var$var[2]),size=1.5*s,
fill='black',color='black',alpha=.5)+
geom_density(data=data[data[,var$var[1]]!='all'&data[,var$var[2]]==g,],
aes_string(x='response',color=var$var[1]),size=1.5*s)}
return(out)}
setGeneric("ocean", function(hbm,...) standardGeneric("ocean"))
setMethod("ocean","hbm_object",function(hbm,vars,fill='lower',s=1){             #create groups of waveplots, takes arguments of model output, focal groups, fill groups, scale
data=hbm@output
out=list()
for(g in vars){
h=data[regexpr(g,data$lower)>0,]
v=hbmvar(h,c(fill))
if(length(v$var)==1){out[[g]]=wave(h,v,s)}
else{if(v$var[2]=='upper'){out[[g]]=wave(h,v,s)}
else{out[[g]]=wave2(h,v,s)}}}
return(unlist(out, recursive = FALSE))})
#################################################################################
dotplot=function(data,var,s){                                                   #create single dotplot, takes argument of model output, focal variables, scale
df=setNames(as.data.frame(matrix(ncol=4)),c('variable','y2.5','y97.5','y50'))
for(i in unique(data[,var$var[1]])){
q=data$response[data[,var$var[1]]==i]
df=rbind(df,data.frame('variable'=i,'y2.5'=quantile(q,0.05),
'y97.5'=quantile(q,0.95),'y50'=quantile(q,.5)))}
g=ggplot(data)+
geom_hline(yintercept=0,size=2*s)+
geom_boxplot(data=na.omit(df),width=.05*s,lwd=s,
aes(x=as.factor(variable),ymin = y2.5, lower = y2.5,
middle = y50, upper = y97.5, ymax = y97.5),
stat = "identity",fill='black')+
geom_point(data=na.omit(df),aes(x=as.factor(variable),y=y50),size=5*s)
return(g)}
dotplot2=function(data,var,s){                                                  #create multi-dotplots (new version), takes argument of model output, focal variables, scale
df=setNames(as.data.frame(matrix(ncol=5)),
c(var$var[1],'v2','y2.5','y97.5','y50'))
for(i in unique(data[,var$var[1]])){
for(j in unique(data[,var$var[2]])){
q=data$response[data[,var$var[1]]==i&data[,var$var[2]]==j]
df=rbind(df,setNames(data.frame('v'=i,'v2'=j,
'y2.5'=quantile(q,0.05),
'y97.5'=quantile(q,0.95),
'y50'=quantile(q,.5)),
c(var$var[1],'v2','y2.5','y97.5','y50')))}}
g=ggplot(data)+
geom_hline(yintercept=0,size=2*s)+
facet_grid(reformulate(var$var[1]))+
geom_boxplot(data=na.omit(df),
width=.05*s,lwd=s,position = position_dodge(.9),
aes(x=as.factor(v2),group=as.factor(v2),
ymin = y2.5, lower = y2.5, middle = y50,
upper = y97.5, ymax = y97.5),
stat = "identity",fill='black')+
geom_point(data=na.omit(df),aes(x=as.factor(v2),
group=as.factor(v2),y=y50),size=5*s)
return(g)}
setGeneric("polka", function(hbm,...) standardGeneric("polka"))
setMethod("polka","hbm_object",function(hbm,vars,fill='lower',s=1){             #create groups of dotplots, takes arguments of model output, focal groups, fill group, scale
data=hbm@output
out=list()
for(g in vars){
h=data[regexpr(g,data$lower)>0,]
v=hbmvar(h,c(fill))
if(length(v$var)==1){out[[g]]=dotplot(h,v,s)}
else{if(v$var[2]=='upper'){out[[g]]=dotplot(h,v,s)}
else{out[[g]]=dotplot2(h,v,s)}}}
return(out)})
#################################################################################
setGeneric("hbmgroup", function(hbm,...) standardGeneric("hbmgroup"))
setMethod("hbmgroup","hbm_object",function(hbm,groups){                         #Selects specific subsets of data based on focal group, takes arguments of model output, focal groups
v=hbm@vars[[2]]
out=setNames(as.data.frame(matrix(ncol=length(hbm@output))),names(hbm@output))
for(g in groups){
if(!(g %in% v)){out=rbind(out,hbm@output[regexpr(g,hbm@output$lower)>0,])}
else{out=rbind(out,hbm@output[regexpr('all',hbm@output[,g])>0,])}}
for(g in groups){
if(!(g %in% v)){out=out[regexpr(g,out$lower)>0,]}
else{out=out[regexpr('all',out[,g])>0,]}}
return(na.omit(out))})
hbmvar=function(data,groups){                                                   #selects specific variable names based on focal groups, takes arguments of model output, focal groups
n=names(data)
filter=c()
for(g in groups){
if(g %in% n){
if(match(g,n)==1){Var=c(g)}
else{Var=c(g,n[match(g,n)-1])}}
else{filter=c(filter,g)}}
return(list('var'=Var,'filter'=filter))}
mgroup=function(data,groups){                                                   #creates data groupings based on focal group names, takes arguments of model output, focal groups
k=0
for(g in groups){
if(k==0){h=hbmgroup(data,c(g));k=1}
else{h=rbind(h,hbmgroup(data,c(g)))}}
return(h)}
#################################################################################
cello=function(data,var,s,label='none',lsize=1){                                #create single violin plot with CI bars, takes argument of model output, focal variables, scale
df=setNames(as.data.frame(matrix(ncol=5)),c('variable','y2.5','y97.5','y50','lab'))
for(i in unique(data[,var$var[1]])){
q=data$response[data[,var$var[1]]==i]
df=rbind(df,data.frame('variable'=i,'y2.5'=quantile(q,0.05),
'y97.5'=quantile(q,0.95),'y50'=quantile(q,.5),
'lab'=paste0(sign(median(q))*round(100*pd(q),1),'%')))}
g=ggplot(data)+
geom_hline(yintercept=0,size=2*s)+
geom_violin(aes_string(x=var$var[1],y='response',
fill=var$var[1]),size=s,scale='width')+
geom_boxplot(data=na.omit(df),width=.05*s,lwd=s,
aes(x=as.factor(variable),
ymin = y2.5, lower = y2.5, middle = y50,
upper = y97.5, ymax = y97.5),stat = "identity")
if(label!='none'){g=g+geom_text(data=na.omit(df),aes(label=lab,
x=as.factor(variable),
y=label),size=lsize)}
return(g)}
cello2=function(data,var,s){                                                    #create multi-violin plots with CI bars, takes argument of model output, focal variables, scale
df=setNames(as.data.frame(matrix(ncol=5)),
c(var$var[1],'v2','y2.5','y97.5','y50'))
for(i in unique(data[,var$var[1]])){
for(j in unique(data[,var$var[2]])){
q=data$response[data[,var$var[1]]==i&data[,var$var[2]]==j]
df=rbind(df,setNames(data.frame('v'=i,'v2'=j,'y2.5'=quantile(q,0.05),
'y97.5'=quantile(q,0.95),
'y50'=quantile(q,.5)),
c(var$var[1],'v2','y2.5','y97.5','y50')))}}
g=ggplot(data)+
geom_hline(yintercept=0,size=2*s)+
facet_grid(reformulate(var$var[1]))+
geom_violin(aes_string(x=var$var[2],y='response',
fill=var$var[2]),size=s,scale='width')+
geom_boxplot(data=na.omit(df),width=.05*s,lwd=s,position=position_dodge(.9),
aes(x=as.factor(v2),group=as.factor(v2),
ymin = y2.5, lower = y2.5, middle = y50,
upper = y97.5, ymax = y97.5),stat = "identity")
return(g)}
setGeneric("bass", function(hbm,...) standardGeneric("bass"))
setMethod("bass","hbm_object",function(hbm,groups,fill='lower',s=1,label='none',lsize=1){               #create groups cello plots, takes arguments of model output, focal groups, fill group, scale
data=hbm@output
out=list()
for(g in groups){
h=data[regexpr(g,data$lower)>0,]
v=hbmvar(h,c(fill))
if(length(v$var)==1){out[[g]]=cello(h,v,s,label=label,lsize=lsize)}
else{if(v$var[2]=='upper'){out[[g]]=cello(h,v,s,label=label,lsize=lsize)}
else{out[[g]]=cello2(h,v,s)}}}
return(out)})
####examples#####################################################################
#generate data
data=data.frame('mass'=rep(0:1,each=50),
'length'=rep(0:1,each=50)+rnorm(100,1,1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[data$site=='B']=1+2*abs(data$length[data$site=='B'])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
#single level
o=hbm(data,length~mass+(site))
summary(o)
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,10))
polka(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-10,10))
bass(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-10,10))
#multiple levels
o=hbm(data,length~mass+(site+sex))
summary(o)
ocean(o,'mass','sex')[[1]]+coord_cartesian(xlim=c(-10,10))
#interaction
o=hbm(data,length~mass:sex+(site))
summary(o)
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,30))
# data$sex=as.numeric(data$sex)
# model='mass~length+sex
# length~sex'
# b=semb(data,model)
#single level
o=hbm(data,length~mass+(site))
summary(o)
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,10))
polka(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-10,10))
bass(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-10,10))
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
data$length[data$site=='B']=1+5*abs(data$length[data$site=='B'])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
####examples#####################################################################
#generate data
data=data.frame('mass'=rep(0:1,each=50),
'length'=rep(0:1,each=50)+rnorm(100,1,1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[data$site=='B']=1+5*abs(data$length[data$site=='B'])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
####examples#####################################################################
#generate data
data=data.frame('mass'=rep(0:1,each=50),
'length'=rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[data$site=='B']=1+5*abs(data$length[data$site=='B'])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
#single level
o=hbm(data,length~mass+(site))
summary(o)
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,10))
polka(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-10,10))
bass(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-10,10))
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
data=data.frame('mass'=rep(0:1,each=50),
'length'=rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[data$site=='B']=1+5*abs(data$length[data$site=='B'])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
data=data.frame('mass'=rep(0:1,each=50),
'length'=rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[data$site=='B']=1+5*abs(data$length[data$site=='B'])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
data=data.frame('mass'=rep(0:1,each=50),
'length'=rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[data$site=='B']=1+50*abs(data$length[data$site=='B'])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
data$length[1:50]=1+50*abs(data$length[1:50]])
data$length[1:50]=1+50*abs(data$length[1:50])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
####examples#####################################################################
#generate data
data=data.frame('mass'=rep(0:1,each=50),
'length'=rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data
data$length[c(T,F)]=10+50*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
data=data.frame('mass'=rep(0:1,each=50),
'length'=rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[c(T,F)]=10+50*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
data=data.frame('mass'=rep(0:1,each=50),
'length'=rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[c(T,F)]=2+2*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
#single level
o=hbm(data,length~mass+(site))
summary(o)
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,10))
polka(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-10,10))
polka(o,'mass','site')[[1]]
bass(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-10,10))
bass(o,'mass','site')[[1]]
bass(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-50,50))
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-50,50))
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,10))
data=data.frame('mass'=rep(0:1,each=50),
'length'=rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[c(T,F)]=2+1.5*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
#single level
o=hbm(data,length~mass+(site))
summary(o)
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,10))
polka(o,'mass','site')[[1]]
bass(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-50,50))
data=data.frame('mass'=rep(0:1,each=50),
'length'=2*rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[c(T,F)]=2+1.5*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
#single level
o=hbm(data,length~mass+(site))
summary(o)
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,10))
polka(o,'mass','site')[[1]]
bass(o,'mass','site')[[1]]+coord_cartesian(ylim=c(-50,50))
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,10))
data=data.frame('mass'=rep(0:1,each=500),
'length'=2*rep(0:1,each=50)+rnorm(1000,1,.1),
'sex'=rep(c('0','1','0','1'),each=250),'b'=rep(c('A','B'),500))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[c(T,F)]=2+1.5*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
#single level
o=hbm(data,length~mass+(site))
summary(o)
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,10))
data=data.frame('mass'=rep(0:1,each=50),
'length'=2*rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[c(T,F)]=2+1.5*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
#multiple levels
o=hbm(data,length~mass+(site+sex))
summary(o)
ocean(o,'mass','sex')[[1]]+coord_cartesian(xlim=c(-10,10))
ocean(o,'mass','sex')[[1]]
polka(o,'mass','site')[[1]]
bass(o,'mass','site')[[1]]
polka(o,'mass','sex')[[1]]
bass(o,'mass','sex')[[1]]
#single level
o=hbm(data,length~mass+(site))
summary(o)
data$length[c(T,F)]=2+1*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
data=data.frame('mass'=rep(0:1,each=50),
'length'=2*rep(0:1,each=50)+rnorm(100,1,.1),
'sex'=rep(c('0','1','0','1'),each=25),'b'=rep(c('A','B'),50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[c(T,F)]=2+1*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
#single level
o=hbm(data,length~mass+(site))
summary(o)
polka(o,'mass','site')[[1]]
#single level
o=hbm(rbind(data,data),length~mass+(site))
summary(o)
####examples#####################################################################
#generate data
data=data.frame('mass'=rep(0:1,each=100),
'length'=2*rep(0:1,each=100)+rnorm(200,1,.1),
'sex'=rep(1:2,each=100),
'b'=rep(letters[1:4],50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[c(T,F)]=2+1*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
data
unique(data[-2])
####examples#####################################################################
#generate data
data=data.frame('mass'=rep(0:1,each=100),
'length'=2*rep(0:1,each=100)+rnorm(200,1,.1),
'sex'=rep(1:2,100),
'b'=rep(letters[1:4],50))
unique(data[-2])
####examples#####################################################################
#generate data
data=data.frame('mass'=rep(0:1,each=100),
'length'=2*rep(0:1,each=100)+rnorm(200,1,.1),
'sex'=rep(c(1,2,2,1),50),
'b'=rep(letters[1:4],50))
unique(data[-2])
####examples#####################################################################
#generate data
data=data.frame('mass'=rep(0:1,each=100),
'length'=2*rep(0:1,each=100)+rnorm(200,1,.1),
'sex'=rep(c(1,2,2,1),each=50),
'b'=rep(letters[1:4],50))
unique(data[-2])
####examples#####################################################################
#generate data
data=data.frame('mass'=rep(0:1,each=100),
'length'=2*rep(0:1,each=100)+rnorm(200,1,.1),
'sex'=rep(c(1,2,2,1),each=50),
'b'=rep(letters[1:4],50))
data$length[data$sex=='1']=5*abs(data$length[data$sex=='1'])
data$length[c(T,F)]=2+1*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
data$length[c(T,F)]=2+2*abs(data$length[c(T,F)])
data$site=data$b
ggplot(data,aes(x=mass,y=length,color=as.factor(sex)))+
geom_point()+
geom_smooth(method=lm,alpha=0)+
facet_grid(cols=vars(b))+
theme_classic()
#single level
o=hbm(rbind(data,data),length~mass+(site))
summary(o)
ocean(o,'mass','site')[[1]]+coord_cartesian(xlim=c(-10,10))
ocean(o,'mass','site')[[1]]
polka(o,'mass','site')[[1]]
bass(o,'mass','site')[[1]]
#multiple levels
o=hbm(data,length~mass+(site+sex))
summary(o)
ocean(o,'mass','sex')[[1]]
polka(o,'mass','sex')[[1]]
bass(o,'mass','sex')[[1]]
