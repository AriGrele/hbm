}
mlen(maxes,lens)
length(maxes)
mlen=function(maxes,lens,x=1){
o=c()
if(x==length(maxes)){return(x)}
else{for(i in 1:maxes[x]){
o=c(o,mlen(maxes,lens.x+1))
}}
return(o)
}
mlen(maxes,lens)
mlen=function(maxes,lens,x=1){
print(x)
o=c()
if(x==length(maxes)){return(x)}
else{for(i in 1:maxes[x]){
o=c(o,mlen(maxes,lens.x+1))
}}
return(o)
}
mlen(maxes,lens)
mlen=function(maxes,lens,x=1){
o=c()
if(x==length(maxes)){return(x)}
else{for(i in 1:maxes[x]){
o=c(o,mlen(maxes,lens,x+1))
}}
return(o)
}
mlen(maxes,lens)
mlen=function(maxes,lens,index=c(),x=1){
o=c()
if(x==length(maxes)){print(index);return(x)}
else{for(i in 1:maxes[x]){
o=c(o,mlen(maxes,lens,c(index,i),x+1))
}}
return(o)
}
mlen(maxes,lens)
ar
lens
lesn[[1,1,1]]
lens[[1,1,1]]
lens[[,1]]
mlen=function(maxes,lens,index=c(),x=1){
o=c()
if(x==length(maxes)){
for(i in index){lens=tryCatch(lens[[i]],error=\(x)0)}
return(lens)}
else{for(i in 1:maxes[x]){
o=c(o,mlen(maxes,lens,c(index,i),x+1))}}
return(o)
}
mlen(maxes,lens)
out=list
for(i in 1:4){
lens=clen(o1@data,o1@vars[[2]][-1][1:i])
maxes=max(unlist(lens))
out[[i]]=mlen(maxes,lens)}
maxes=c()
out=list()
for(i in 1:4){
maxes=max(unlist(lens))}
for(i in 1:4){
lens=clen(o1@data,o1@vars[[2]][-1][1:i])
out[[i]]=mlen(maxes,lens)}
out
=mlen(maxes,lens)
mlen(maxes,lens)
for(i in 1:4){
lens=clen(o1@data,o1@vars[[2]][-1][1:i])
out[[i]]=unlist(mlen(maxes,lens))}
out
lens
c
c()
c=c()
c
c(1,1)
o=c()
o
maxes
maxes=c()
out=list()
for(i in 1:4){
maxes=max(unlist(lens))}
maxes
maxes=c()
out=list()
for(i in 1:4){
lens=clen(o1@data,o1@vars[[2]][-1][1:i])
maxes=c(maxes,max(unlist(lens)))}
for(i in 1:4){
lens=clen(o1@data,o1@vars[[2]][-1][1:i])
out[[i]]=unlist(mlen(maxes,lens))}
out
maxes
lens
unlist(lens)
for(i in 1:4){
lens=clen(o1@data,o1@vars[[2]][-1][1:i])
out[[i]]=unlist(mlen(maxes,lens))}
out
i=1
lens=clen(o1@data,o1@vars[[2]][-1][1:i])
lens
maxes=c()
out=list()
for(i in 1:4){
lens=clen(o1@data,o1@vars[[2]][-1][1:i])
maxes=c(maxes,max(unlist(lens)))
out[[i]]=unlist(mlen(maxes,lens))}
out
o1@vars
hbm=o1
maxes=c()
out=list()
for(i in 1:length(hbm@vars[[2]])){
lens=clen(hbm@data,hbm@vars[[2]][-1][1:i])
maxes=c(maxes,max(unlist(lens)))
hbm@model_data[[paste('N',hbm@vars[[2]][-1][n],sep='')]]=unlist(mlen(maxes,lens))}
i
maxes=c()
out=list()
for(i in 1:length(hbm@vars[[2]][-1])){
lens=clen(hbm@data,hbm@vars[[2]][-1][1:i])
maxes=c(maxes,max(unlist(lens)))
hbm@model_data[[paste('N',hbm@vars[[2]][-1][n],sep='')]]=unlist(mlen(maxes,lens))}
hbm@model_data
i
lens
maxes
paste('N',hbm@vars[[2]][-1][n],sep='')
maxes=c()
for(i in 1:length(hbm@vars[[2]][-1])){
lens=clen(hbm@data,hbm@vars[[2]][-1][1:i])
maxes=c(maxes,max(unlist(lens)))
hbm@model_data[[paste('N',hbm@vars[[2]][-1][i],sep='')]]=unlist(mlen(maxes,lens))}
hbm@model_data
source('hbm.R')
source('hbm.R')
o1=hbm(mix,length~mass+(site+species+sex+color))
o1@model_data
o1=hbm(mix,length~mass+(site+species+sex+color),source_model='test')
o1@model_data
attach(o1@model_data)
detach
detach()
o1=hbm(mix,length~mass+(site+species+sex+color),source_model='test')
o1=hbm(mix,length~mass+(site+species+sex+color),source_model='test',format='mean')
o1=hbm(mix,length~mass+(site+species+sex+color),source_model='test')
hbm=o1
dimension=c()
for(q in 1:(length(hbm@vars[[2]])-1)){
groupcode=''
if(q==2){groupcode='[a]'}
if(q>2){
groupcode=c(letters[q-1])
dims=paste0('(',letters[1:(q-2)],'-1)')
for(d in dims){
groupcode=c(groupcode,
paste(d,paste(paste0('max(N',hbm@vars[[2]][3:q],')'),collapse='*'),sep='*'))}
groupcode=paste0('[',paste(groupcode,collapse='+'),']')}
loop=str_interp('for(${letters[q]} in 1:N${hbm@vars[[2]][-1][q]}${groupcode}){')
dimension=''
types=c()
for(r in rv){
mu=0
if(hbm@format=='mean'){mu=r[q]}
if(regexpr('^[aA]lpha',r[1])>0){
types=c(types,str_interp('~dnorm(${mu},a${t[q+1]})'))}
else{types=c(types,str_interp('~dnorm(${mu},${t[q+1]})'))}}
if(hbm@format=='mean'){
if(q==1){types=gsub('[i]','',types,fixed=T)}
else{types=gsub(is[q],paste(paste('[',letters[1:(q-1)],']',sep=''),collapse=''),types,fixed=T)}}
lines=gsub(is[q+1],paste(paste('[',letters[1:q],']',sep=''),collapse=''),
paste(paste(as.data.frame(rv)[q+1,],types,sep=''),
collapse='\n\t'),
fixed=T)
middle=c(middle,paste(loop,lines,sep='\n\t'))}}
slot(hbm,'variables')=c(as.character(hbm@input$model)[2],
strsplit(gsub('\\((.+)\\)','\\1',
as.character(hbm@input$model)[3]),
' \\+ ')[[1]])
formula=as.character(hbm@input$model)[3]
if(regexpr('\\(',formula)<0){formula=paste0(formula,' + ()')}
hbm@vars=strsplit(formula,'\\(')[[1]]|>
(\(x)gsub(')','',x))()|>
(\(x)gsub(' \\+ ',',',x))()|>
(\(x)gsub(',$','',x))()|>
strsplit(',')|>
setNames(c('Variables','Groups'))
var1_terms=c()
hbm@vars[['Interaction terms']]=list()
for(q in hbm@vars[[1]]){
if(regexpr(':',q)>0){
split=strsplit(q,':')[[1]]
var1_terms=c(var1_terms,split[1])
if(split[1]%in%names(hbm@vars[[3]])){
hbm@vars[[3]][[split[1]]]=c(hbm@vars[[3]][[split[1]]],split[-1])}
else{hbm@vars[[3]]=c(hbm@vars[[3]],setNames(list(split[-1]),split[1]))}}
else{var1_terms=c(var1_terms,q)}}
hbm@vars[[1]]=var1_terms
new_i='i'
while(T){                                                                     #if i in variable names generate replacement variable for iterations in model
if(new_i%in%hbm@variables){new_i=paste(new_i,sample(letters,1),sep='')}
else{break}}
new=c(str_interp('${as.character(hbm@input$model)[2]}[i]~${response(hbm)}'),
str_interp('${as.character(hbm@input$model)[2]}.sim[i]~${response(hbm)}'),
str_interp('${as.character(hbm@input$model)[2]}.res[i]=${as.character(hbm@input$model)[2]}[i]-mu[i]'),
str_interp('${as.character(hbm@input$model)[2]}.sres[i]=${as.character(hbm@input$model)[2]}.sim[i]-mu[i]'))
left=paste(new,collapse='\n\t')
if(length(hbm@vars[[2]])>0){
hbm@data=hbm@data[order(hbm@data[,hbm@vars[[2]][1]]),]}
rv=is=c();c=0
hbm@vars[[2]]=tryCatch(c('',hbm@vars[[2]]),error=function(e){c('')})
x=paste(c('',rep('[',length(hbm@vars[[2]])-1)),hbm@vars[[2]],sep='')|>
(\(x)paste(x,'[i]',sep=''))()|>
(\(x)paste(x,c('',rep(']',length(hbm@vars[[2]])-1)),sep=''))()
for(q in hbm@vars[[2]]){
c=c+1;is=c(is,paste(c('',x[-1])[1:c],collapse=''))
rv=c(rv,paste('alpha',q,sep='_'))}
for(w in hbm@vars[[1]]){
for(q in hbm@vars[[2]]){rv=c(rv,paste('beta',w,q,sep='_'))}}
rv=chunk(gsub('_$','[i]',paste(rv,is,sep='')),length(hbm@vars[[2]]))
right=c()
rv=unique(rv)
c=0
if(hbm@format=='difference'){formfilter=1:length(rv[[2]])}
else{formfilter=length(rv[[2]])}
for(q in rv[-1]){
term=gsub('beta_','',gsub('\\[.+\\]','',q))[1]
if(term%in%names(hbm@vars[[3]])){
ints=c()
for(item in hbm@vars[[3]][[term]]){
int_q=gsub('beta_',paste('beta_int_',item,sep=''),q)
rv=c(rv,list(int_q))
ints=c(ints,str_interp("(${paste(int_q,collapse='+')})*${item}[i][i]"))}
c=c+1
right=c(right,str_interp("(${paste(paste(q[formfilter],collapse='+'),paste(ints,collapse='+'),sep='+')})*${hbm@vars[[1]][c]}[i]"))}
else{c=c+1;right=c(right,str_interp("(${paste(q[formfilter],collapse='+')})*${hbm@vars[[1]][c]}[i]"))}}
rv=unique(rv)
right=gsub('\\[i\\]\\)',')',gsub('\\[i\\]\\+','+',right))
rn=gsub('\\[i\\]$','',rv[[1]])
rn_ints=list()
simple=rn
for(term in hbm@vars[[3]]){
for(item in unique(term)){
int=gsub('^alpha',paste('Alpha_int_',item,sep=''),simple)
rn_ints=c(rn_ints,list(int))
int=paste('(',paste(int,collapse='+'),')*',item,'[i]',sep='')
rn=c(rn,paste(int))}}
top=str_interp("for(i in 1:N){\n\t${left}\n\tmu[i]=${paste(rn[formfilter],collapse='+')}+\n\t${paste(right,collapse='+\n\t')}}")
hbm@formula=paste(paste(rn,collapse='+'),paste(right,collapse='+'),sep='+')
s=t=c()
rv=c(rv,rn_ints)
for(q in hbm@vars[[2]]){
snam='sigma';tnam='tau'
s=c(s,paste(snam,q,sep='_'))
t=c(t,paste(tnam,q,sep='_'))}
s=gsub('_$','',s)
t=gsub('_$','',t)
bottom=paste(s,'~dunif(0,100)\n',t,'=1/(',s,'*',s,')',sep='')|>
(\(x)paste(x,collapse='\n'))()
if(q!=''){
bottom=paste('a',s,'~dunif(0,100)\n','a',t,'=1/(',s,'*',s,')',sep='')|>
(\(x)paste(x,collapse='\n'))()|>
(\(x)paste(bottom,x,sep='\n'))()}
bottom=str_interp("${bottom}\n${paste(paste(gsub('\\\\[.+\\\\]','',as.data.frame(rv)[1,]),'~dnorm(0,0.01)',sep=''),collapse='\n')}")
middle=c()
if(length(hbm@vars[[2]])>1){
dimension=c()
for(q in 1:(length(hbm@vars[[2]])-1)){
groupcode=''
if(q==2){groupcode='[a]'}
if(q>2){
groupcode=c(letters[q-1])
dims=paste0('(',letters[1:(q-2)],'-1)')
for(d in dims){
groupcode=c(groupcode,
paste(d,paste(paste0('max(N',hbm@vars[[2]][3:q],')'),collapse='*'),sep='*'))}
groupcode=paste0('[',paste(groupcode,collapse='+'),']')}
loop=str_interp('for(${letters[q]} in 1:N${hbm@vars[[2]][-1][q]}${groupcode}){')
dimension=''
types=c()
for(r in rv){
mu=0
if(hbm@format=='mean'){mu=r[q]}
if(regexpr('^[aA]lpha',r[1])>0){
types=c(types,str_interp('~dnorm(${mu},a${t[q+1]})'))}
else{types=c(types,str_interp('~dnorm(${mu},${t[q+1]})'))}}
if(hbm@format=='mean'){
if(q==1){types=gsub('[i]','',types,fixed=T)}
else{types=gsub(is[q],paste(paste('[',letters[1:(q-1)],']',sep=''),collapse=''),types,fixed=T)}}
lines=gsub(is[q+1],paste(paste('[',letters[1:q],']',sep=''),collapse=''),
paste(paste(as.data.frame(rv)[q+1,],types,sep=''),
collapse='\n\t'),
fixed=T)
middle=c(middle,paste(loop,lines,sep='\n\t'))}}
middle=paste(middle,collapse='\n')|>
(\(x)paste(c(x,rep('}',length(hbm@vars[[2]])-1)),collapse=''))()
tail=paste(c(str_interp('${as.character(hbm@input$model)[2]}.fit=sum(pow(${as.character(hbm@input$model)[2]}.res[],2))'),
str_interp('${as.character(hbm@input$model)[2]}.sfit=sum(pow(${as.character(hbm@input$model)[2]}.sres[],2))')),collapse='\n')
groupcode
hbm@vars[[2]][3:q]
dimension=c()
groups=c()
for(q in 1:(length(hbm@vars[[2]])-1)){
groupcode=''
if(q==2){groupcode='[a]'}
if(q>2){
groupcode=c(letters[q-1])
dims=paste0('(',letters[1:(q-2)],'-1)')
for(d in dims){
groups=c(paste(paste0('max(N',hbm@vars[[2]][3:q],')'),collapse='*'),groups)
#groupcode=c(groupcode,
#            paste(d,,sep='*'))}
groupcode=paste0('[',paste(groupcode,collapse='+'),']')}
loop=str_interp('for(${letters[q]} in 1:N${hbm@vars[[2]][-1][q]}${groupcode}){')
dimension=''
types=c()
for(r in rv){
mu=0
if(hbm@format=='mean'){mu=r[q]}
if(regexpr('^[aA]lpha',r[1])>0){
types=c(types,str_interp('~dnorm(${mu},a${t[q+1]})'))}
else{types=c(types,str_interp('~dnorm(${mu},${t[q+1]})'))}}
if(hbm@format=='mean'){
if(q==1){types=gsub('[i]','',types,fixed=T)}
else{types=gsub(is[q],paste(paste('[',letters[1:(q-1)],']',sep=''),collapse=''),types,fixed=T)}}
lines=gsub(is[q+1],paste(paste('[',letters[1:q],']',sep=''),collapse=''),
paste(paste(as.data.frame(rv)[q+1,],types,sep=''),
collapse='\n\t'),
fixed=T)
middle=c(middle,paste(loop,lines,sep='\n\t'))}}
groups
hbm@vars[[2]][3:q]
hbm@vars[[2]][3:2]
hbm@vars[[2]][3:1]
hbm@vars[[2]][2:q]
hbm@vars[[2]][2:q][-1]
hbm@vars[[2]][2:1][-1]
hbm@vars[[2]][-1][(length(hbm@vars[[2]])-1):q]
q=1
hbm@vars[[2]][-1][(length(hbm@vars[[2]])-1):q]
hbm@vars[[2]][-1][2:q]
hbm@vars[[2]][-1][2:q]
hbm@vars[[2]]
hbm@vars[[2]][-1][q:(length(hbm@vars[[2]])-1)]
slice=((length(hbm@vars[[2]])-1)-q):(length(hbm@vars[[2]])-1)
slice
hbm@vars[[2]][-1][slice]
hbm@vars
q=2
hbm@vars[[2]][-1][2:q]
q=3
hbm@vars[[2]][-1][2:q]
q=4
hbm@vars[[2]][-1][2:q]
q=3
hbm@vars[[2]][-1][3:q]
hbm@vars[[2]][3:q]
hbm@vars[[2]][3:4]
dims
groupcode
q=3
c(letters[q-1])
if(length(hbm@vars[[2]])>1){
dimension=c()
groups=c()
for(q in 1:(length(hbm@vars[[2]])-1)){
groupcode=''
if(q==2){groupcode='[a]'}
if(q>2){
groups=c(hbm@vars[[2]][3:q],groups)
groupcode=c(letters[q-1])
dims=paste0('(',letters[1:(q-2)],'-1)')
for(d in dims){
groups=c(paste(paste0('max(N',hbm@vars[[2]][3:q],')'),collapse='*'),groups)
#groupcode=c(groupcode,
#            paste(d,,sep='*'))}
groupcode=paste0('[',paste(groupcode,collapse='+'),']')}
loop=str_interp('for(${letters[q]} in 1:N${hbm@vars[[2]][-1][q]}${groupcode}){')
dimension=''
types=c()
for(r in rv){
mu=0
if(hbm@format=='mean'){mu=r[q]}
if(regexpr('^[aA]lpha',r[1])>0){
types=c(types,str_interp('~dnorm(${mu},a${t[q+1]})'))}
else{types=c(types,str_interp('~dnorm(${mu},${t[q+1]})'))}}
if(hbm@format=='mean'){
if(q==1){types=gsub('[i]','',types,fixed=T)}
else{types=gsub(is[q],paste(paste('[',letters[1:(q-1)],']',sep=''),collapse=''),types,fixed=T)}}
lines=gsub(is[q+1],paste(paste('[',letters[1:q],']',sep=''),collapse=''),
paste(paste(as.data.frame(rv)[q+1,],types,sep=''),
collapse='\n\t'),
fixed=T)
middle=c(middle,paste(loop,lines,sep='\n\t'))}}
middle=paste(middle,collapse='\n')|>
(\(x)paste(c(x,rep('}',length(hbm@vars[[2]])-1)),collapse=''))()
tail=paste(c(str_interp('${as.character(hbm@input$model)[2]}.fit=sum(pow(${as.character(hbm@input$model)[2]}.res[],2))'),
str_interp('${as.character(hbm@input$model)[2]}.sfit=sum(pow(${as.character(hbm@input$model)[2]}.sres[],2))')),collapse='\n')
hbm@model=str_interp("model{\n${paste(top,middle,bottom,tail,sep='\n')}\n}")|>
(\(x)gsub('\\]\\[',',',x))()|>
(\(x)gsub('\\[i\\]',paste(c('\\[',new_i,'\\]'),collapse=''),x))()|>
(\(x)gsub('for\\(i',paste(c('for\\(',new_i),collapse=''),x))()
if(hbm@source_model==''){
writeLines(hbm@model,paste(hbm@model_dir,'/',hbm@model_name,'.txt',sep=''))}
hbm@save=c(str_interp('${as.character(hbm@input$model)[2]}.sfit'),
str_interp('${as.character(hbm@input$model)[2]}.fit'))
for(i in rv){hbm@save=c(hbm@save,i)}
hbm@save=gsub('\\[.+\\]','',hbm@save)
return(hbm)})
if(length(hbm@vars[[2]])>1){
dimension=c()
groups=c()
for(q in 1:(length(hbm@vars[[2]])-1)){
groupcode=''
if(q==2){groupcode='[a]'}
if(q>2){
groups=c(hbm@vars[[2]][3:q],groups)
groupcode=c(letters[q-1])
dims=paste0('(',letters[1:(q-2)],'-1)')
for(d in dims){
groups=c(paste(paste0('max(N',hbm@vars[[2]][3:q],')'),collapse='*'),groups)
#groupcode=c(groupcode,
#            paste(d,,sep='*'))
}
groupcode=paste0('[',paste(groupcode,collapse='+'),']')}
loop=str_interp('for(${letters[q]} in 1:N${hbm@vars[[2]][-1][q]}${groupcode}){')
dimension=''
types=c()
for(r in rv){
mu=0
if(hbm@format=='mean'){mu=r[q]}
if(regexpr('^[aA]lpha',r[1])>0){
types=c(types,str_interp('~dnorm(${mu},a${t[q+1]})'))}
else{types=c(types,str_interp('~dnorm(${mu},${t[q+1]})'))}}
if(hbm@format=='mean'){
if(q==1){types=gsub('[i]','',types,fixed=T)}
else{types=gsub(is[q],paste(paste('[',letters[1:(q-1)],']',sep=''),collapse=''),types,fixed=T)}}
lines=gsub(is[q+1],paste(paste('[',letters[1:q],']',sep=''),collapse=''),
paste(paste(as.data.frame(rv)[q+1,],types,sep=''),
collapse='\n\t'),
fixed=T)
middle=c(middle,paste(loop,lines,sep='\n\t'))}}
groups
paste(paste0('max(N',hbm@vars[[2]][3:q],')'),collapse='*')
for(q in 1:(length(hbm@vars[[2]])-1)){
groupcode=''
if(q==2){groupcode='[a]'}
if(q>2){
groups=c(hbm@vars[[2]][3:q],groups)
groupcode=c(letters[q-1])
dims=paste0('(',letters[1:(q-2)],'-1)')
for(d in dims){
#groupcode=c(groupcode,
#            paste(d,,sep='*'))
}
groupcode=paste0('[',paste(groupcode,collapse='+'),']')}
loop=str_interp('for(${letters[q]} in 1:N${hbm@vars[[2]][-1][q]}${groupcode}){')
dimension=''
types=c()
for(r in rv){
mu=0
if(hbm@format=='mean'){mu=r[q]}
if(regexpr('^[aA]lpha',r[1])>0){
types=c(types,str_interp('~dnorm(${mu},a${t[q+1]})'))}
else{types=c(types,str_interp('~dnorm(${mu},${t[q+1]})'))}}
if(hbm@format=='mean'){
if(q==1){types=gsub('[i]','',types,fixed=T)}
else{types=gsub(is[q],paste(paste('[',letters[1:(q-1)],']',sep=''),collapse=''),types,fixed=T)}}
lines=gsub(is[q+1],paste(paste('[',letters[1:q],']',sep=''),collapse=''),
paste(paste(as.data.frame(rv)[q+1,],types,sep=''),
collapse='\n\t'),
fixed=T)
middle=c(middle,paste(loop,lines,sep='\n\t'))}}
if(length(hbm@vars[[2]])>1){
dimension=c()
groups=c()
for(q in 1:(length(hbm@vars[[2]])-1)){
groupcode=''
if(q==2){groupcode='[a]'}
if(q>2){
groups=c(hbm@vars[[2]][3:q],groups)
groupcode=c(letters[q-1])
dims=paste0('(',letters[1:(q-2)],'-1)')
for(d in dims){
#groupcode=c(groupcode,
#            paste(d,,sep='*'))
}
groupcode=paste0('[',paste(groupcode,collapse='+'),']')}
loop=str_interp('for(${letters[q]} in 1:N${hbm@vars[[2]][-1][q]}${groupcode}){')
dimension=''
types=c()
for(r in rv){
mu=0
if(hbm@format=='mean'){mu=r[q]}
if(regexpr('^[aA]lpha',r[1])>0){
types=c(types,str_interp('~dnorm(${mu},a${t[q+1]})'))}
else{types=c(types,str_interp('~dnorm(${mu},${t[q+1]})'))}}
if(hbm@format=='mean'){
if(q==1){types=gsub('[i]','',types,fixed=T)}
else{types=gsub(is[q],paste(paste('[',letters[1:(q-1)],']',sep=''),collapse=''),types,fixed=T)}}
lines=gsub(is[q+1],paste(paste('[',letters[1:q],']',sep=''),collapse=''),
paste(paste(as.data.frame(rv)[q+1,],types,sep=''),
collapse='\n\t'),
fixed=T)
middle=c(middle,paste(loop,lines,sep='\n\t'))}}
groups
